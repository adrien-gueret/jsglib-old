{"version":3,"sources":["../../../samples/tiles_collisions/link.js"],"names":[],"mappings":"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","file":"link.js","sourcesContent":["\"use strict\";\r\n\r\nimport Element from \"jsglib/element\";\r\nimport Inputs from \"jsglib/inputs\";\r\nimport Layer from \"jsglib/layer\";\r\nimport Sprite from \"jsglib/sprite\";\r\n\r\n// Sprite class defining tiles and animations for Link\r\nexport class LinkSprite extends Sprite {\r\n    static init(timer) {\r\n        this\r\n            .makeTiles(32, 32, 2)\r\n            .defineTilesAnimations([\r\n                {\r\n                    name: 'walk_bottom',\r\n                    tiles: [1, 2],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'walk_left',\r\n                    tiles: [3, 4],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'walk_top',\r\n                    tiles: [5, 6],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'walk_right',\r\n                    tiles: [7, 8],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'push_bottom',\r\n                    tiles: [9, 10],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'push_left',\r\n                    tiles: [11, 12],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'push_top',\r\n                    tiles: [13, 14],\r\n                    time: 150\r\n                },\r\n                {\r\n                    name: 'push_right',\r\n                    tiles: [15, 16],\r\n                    time: 150\r\n                }\r\n            ], timer);\r\n    }\r\n}\r\n\r\nconst LINK_SPEED = 3;\r\nexport class Link extends Element {\r\n    constructor(x, y, game) {\r\n        // We must call the parent's constructor\r\n        super(x, y);\r\n\r\n        // Tell which Sprite class to use for displaying\r\n        this.setSpriteClass(LinkSprite);\r\n\r\n        // Tell that this instance must not move on solids\r\n        this.stop_on_solids = true;\r\n\r\n        // Attach keyboards events\r\n        game.inputs\r\n            .on('keydown', (e) => {\r\n                // Do nothing if pressed key is not an arrow\r\n                if (!e.detail.is_arrow) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                // Update Link's animation if he's not pushing walls\r\n                if (this.getAnimationName().indexOf('push') === -1) {\r\n                    this.switchAnimationByKey(e.detail.key);\r\n                }\r\n            })\r\n            .on('keyup', (e) => {\r\n                // Do nothing if released key is not an arrow\r\n                if (!e.detail.is_arrow) {\r\n                    return;\r\n                }\r\n\r\n                // Check if another arrow key is still pressed\r\n                let pressed_arrows = game.inputs.getPressedArrows();\r\n\r\n                if (pressed_arrows.length) {\r\n                    return this.switchAnimationByKey(pressed_arrows[0]);\r\n                }\r\n\r\n                // No arrows keys are pressed: we stop the animation\r\n                this.switchAnimationByKey(e.detail.key);\r\n                this.setCurrentTileNumber(this.current_animation.tiles_numbers[0]);\r\n                this.current_animation.stop();\r\n            });\r\n\r\n        // Other specific events related to this current instance\r\n        this\r\n            .on('frame', () => {\r\n                // On each frame, update instance's speeds according to pressed keys\r\n                if (game.inputs.isKeyPressed(Inputs.KEYS.ARROWS.LEFT)) {\r\n                    this.speed.x = -LINK_SPEED;\r\n                } else if (game.inputs.isKeyPressed(Inputs.KEYS.ARROWS.RIGHT)) {\r\n                    this.speed.x = LINK_SPEED;\r\n                } else {\r\n                    this.speed.x = 0;\r\n                }\r\n\r\n                if (game.inputs.isKeyPressed(Inputs.KEYS.ARROWS.UP)) {\r\n                    this.speed.y = -LINK_SPEED;\r\n                } else if (game.inputs.isKeyPressed(Inputs.KEYS.ARROWS.DOWN)) {\r\n                    this.speed.y = LINK_SPEED;\r\n                } else {\r\n                    this.speed.y = 0;\r\n                }\r\n            })\r\n            .on('tile_collision', (e) => {\r\n                // On collision with solids, use \"push\" animation according to collided tile position\r\n                if (e.detail.tile_data.tile.isSolid()) {\r\n                    let this_size = this.getSize();\r\n                    let tile_size = e.detail.tile_data.tile.getSize();\r\n                    let tile_position = e.detail.tile_data.position;\r\n\r\n                    if (tile_position.y + tile_size.height <= this.position.y) {\r\n                        this.useAnimation('push_top');\r\n                        e.stopPropagation();\r\n                    } else if (this.position.y + this_size.height <= tile_position.y) {\r\n                        this.useAnimation('push_bottom');\r\n                        e.stopPropagation();\r\n                    } else if (tile_position.x + tile_size.width <= this.position.x) {\r\n                        this.useAnimation('push_left');\r\n                        e.stopPropagation();\r\n                    } else if (this.position.x + this_size.width <= tile_position.x) {\r\n                        this.useAnimation('push_right');\r\n                        e.stopPropagation();\r\n                    }\r\n                }\r\n            })\r\n            .on('no_solids_collision', () => {\r\n                // When the instance has no collisions with solids, if it's pushing,\r\n                // change its \"push\" animation to the corresponding \"walk\" one\r\n                switch (this.getAnimationName()) {\r\n                    case 'push_left':\r\n                        this.useAnimation('walk_left');\r\n                        break;\r\n                    case 'push_top':\r\n                        this.useAnimation('walk_top');\r\n                        break;\r\n                    case 'push_right':\r\n                        this.useAnimation('walk_right');\r\n                        break;\r\n                    case 'push_bottom':\r\n                        this.useAnimation('walk_bottom');\r\n                        break;\r\n                }\r\n            });\r\n\r\n        // Add player to layer in order to display it\r\n        Layer.MAIN_LAYER.addElement(this);\r\n    }\r\n\r\n    // Custom method for this class: it updates Link's animation according to pressed arrow key\r\n    switchAnimationByKey(key) {\r\n        switch (key) {\r\n            case Inputs.KEYS.ARROWS.LEFT:\r\n                this.useAnimation('walk_left');\r\n                break;\r\n\r\n            case Inputs.KEYS.ARROWS.UP:\r\n                this.useAnimation('walk_top');\r\n                break;\r\n\r\n            case Inputs.KEYS.ARROWS.RIGHT:\r\n                this.useAnimation('walk_right');\r\n                break;\r\n\r\n            case Inputs.KEYS.ARROWS.DOWN:\r\n                this.useAnimation('walk_bottom');\r\n                break;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}"]}