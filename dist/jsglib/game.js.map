{"version":3,"sources":["../../jsglib/game.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAKqB,IAAI;iBAAJ,IAAI;;;;kCAAJ,IAAI;;;;;;;;;qBAAJ,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAJ,IAAI;;;sBAAJ,IAAI","file":"game.js","sourcesContent":["\"use strict\";\r\n\r\nimport Layer from 'jsglib/layer';\r\nimport Timer from 'jsglib/timer';\r\n\r\nexport default class Game {\r\n    constructor(game_container, layers = [\r\n        Layer.MAIN_LAYER,\r\n        Layer.TILES_LAYER,\r\n        Layer.BACKGROUND_LAYER\r\n    ], fps = 30) {\r\n        this.container = game_container;\r\n        this.current_room = null;\r\n        this.classes = {};\r\n        this.timer = new Timer(fps);\r\n\r\n        this.defineLayers(layers);\r\n    }\r\n\r\n    defineLayers(layers) {\r\n        this.layers = {};\r\n\r\n        layers.forEach((layer, key) => {\r\n            layer.setZindex(key);\r\n            this.layers[layer.name] = layer;\r\n            this.container.appendChild(layer.canvas);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    getLayerFromName(layer_name) {\r\n        return this.layers[layer_name];\r\n    }\r\n\r\n    registerClass(new_class) {\r\n        this.classes[new_class.name] = new_class;\r\n        return this;\r\n    }\r\n\r\n    getClass(class_name) {\r\n        if (typeof class_name === 'function') {\r\n            return class_name;\r\n        }\r\n\r\n        if (this.classes[class_name]) {\r\n            return this.classes[class_name];\r\n        }\r\n\r\n        return window[class_name];\r\n    }\r\n\r\n    start() {\r\n        this.last_loop_time = Date.now();\r\n        this.loop();\r\n        return this;\r\n    }\r\n\r\n    loop() {\r\n        window.requestAnimationFrame(this.loop.bind(this));\r\n\r\n        let now = Date.now();\r\n        let delta = now - this.last_loop_time;\r\n        let interval = 1000 / this.timer.fps;\r\n\r\n        if (delta <= interval) {\r\n            this.timer.trigger('step');\r\n\r\n            return this;\r\n        }\r\n\r\n        this.render();\r\n\r\n        this.last_loop_time = now - (delta % interval);\r\n\r\n        return this;\r\n    }\r\n\r\n    render() {\r\n        if (!this.layers) {\r\n            return this;\r\n        }\r\n\r\n        for (let layer_name in this.layers) {\r\n            this.layers[layer_name].draw(this.timer);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    goToRoom(level) {\r\n        this.current_room = level;\r\n        level.initRoom(this);\r\n\r\n        this.container.style.width = level.width + 'px';\r\n        this.container.style.height = level.height + 'px';\r\n\r\n        for (let layer_name in this.layers) {\r\n            let layer = this.layers[layer_name];\r\n            layer.setSize(level.width, level.height);\r\n        }\r\n\r\n        return this;\r\n    }\r\n}"]}