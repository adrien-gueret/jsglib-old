{"version":3,"sources":["../../jsglib/animation.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBA6De,SAAS","file":"animation.js","sourcesContent":["\"use strict\";\r\n\r\nimport EventsHandler from 'jsglib/events_handler';\r\n\r\nclass Animation extends EventsHandler {\r\n    constructor(timer, tiles_numbers = [], default_time = 500) {\r\n        super();\r\n        this.timer = timer;\r\n        this.default_time = default_time;\r\n        this.tiles_numbers = tiles_numbers;\r\n        this.animation_index = 0;\r\n        this.animation_clock = null;\r\n    }\r\n\r\n    getPreviousTileNumber() {\r\n        let tile_index = this.animation_index > 0 ? this.animation_index - 1 : this.tiles_numbers.length - 1;\r\n\r\n        return this.tiles_numbers[tile_index];\r\n    }\r\n\r\n    getCurrentTileNumber() {\r\n        return this.tiles_numbers[this.animation_index];\r\n    }\r\n\r\n    start(time = this.default_time, loop = true) {\r\n        this.animation_clock = this.timer.setTimeout(() => {\r\n            this.animation_index++;\r\n\r\n            if (this.animation_index < this.tiles_numbers.length) {\r\n                this.trigger('animation_udpate');\r\n                this.start(time, loop);\r\n            } else if (loop) {\r\n                this.stop();\r\n                this.trigger('animation_udpate');\r\n                this.start(time, loop);\r\n            }\r\n        }, time);\r\n        return this;\r\n    }\r\n\r\n    stop() {\r\n        this.timer.clearTimeout(this.animation_clock);\r\n        this.animation_clock = null;\r\n        this.animation_index = 0;\r\n        return this;\r\n    }\r\n\r\n    static define(timer, tiles_numbers, default_time, name = Symbol()) {\r\n        Animation.classes[name] = class extends Animation {\r\n            constructor(default_timer) {\r\n                super(timer || default_timer, tiles_numbers, default_time);\r\n                this.name = name;\r\n            }\r\n        };\r\n\r\n        return Animation.classes[name];\r\n    }\r\n}\r\n\r\nAnimation.classes = {};\r\n\r\nexport default Animation;"]}