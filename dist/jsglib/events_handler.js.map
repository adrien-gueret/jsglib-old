{"version":3,"sources":["../../jsglib/events_handler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAEqB,aAAa;iBAAb,aAAa;kCAAb,aAAa;;;;;;qBAAb,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAb,aAAa;;;sBAAb,aAAa","file":"events_handler.js","sourcesContent":["\"use strict\";\r\n\r\nexport default class EventsHandler {\r\n    constructor() {\r\n        this.events_handler = document.createElement('div');\r\n        this.all_callbacks = {};\r\n    }\r\n\r\n    on(event_name, callback) {\r\n        this.events_handler.addEventListener('jsglib.' + event_name, callback, false);\r\n\r\n        if (!this.all_callbacks[event_name]) {\r\n            this.all_callbacks[event_name] = [];\r\n        }\r\n\r\n        this.all_callbacks[event_name].push(callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    off(event_name, callback) {\r\n        if (callback) {\r\n            this.events_handler.removeEventListener('jsglib.' + event_name, callback, false);\r\n        } else if (this.all_callbacks[event_name]) {\r\n            this.all_callbacks[event_name].forEach(callback => {\r\n                this.off(event_name, callback);\r\n            });\r\n            delete this.all_callbacks[event_name];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    trigger(event_name, data = {}) {\r\n        let custom_event = new CustomEvent('jsglib.' + event_name, {detail: data, bubbles: false, cancelable: true});\r\n        this.events_handler.dispatchEvent(custom_event);\r\n        return custom_event;\r\n    }\r\n}"]}