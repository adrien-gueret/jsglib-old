{"version":3,"sources":["../../jsglib/tile.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAoFe,IAAI","file":"tile.js","sourcesContent":["\"use strict\";\r\n\r\nimport EventsHandler from \"jsglib/events_handler\";\r\nimport Point from \"jsglib/point\";\r\n\r\nclass Tile extends EventsHandler {\r\n    constructor(sprite_class, x = 0, y = 0, tile_number = 0, type = null) {\r\n        super();\r\n\r\n        this.sprite_class = sprite_class;\r\n        this.sheet_position = new Point(x, y);\r\n        this.tile_number = tile_number;\r\n        this.needs_redraw = true;\r\n        this.is_empty = false;\r\n        this.type = type;\r\n    }\r\n\r\n    static getNewEmptyTile(sprite_class) {\r\n        let tile = new Tile(sprite_class);\r\n        tile.is_empty = true;\r\n        return tile;\r\n    }\r\n\r\n    getSize() {\r\n        return this.sprite_class.getTilesSize();\r\n    }\r\n\r\n    clone() {\r\n        return new Tile(this.sprite_class, this.sheet_position.x, this.sheet_position.y, this.tile_number, this.type);\r\n    }\r\n\r\n    setTileNumber(tile_number) {\r\n        let tile = this.sprite_class.getTile(tile_number);\r\n        this.is_empty = tile.is_empty;\r\n        this.tile_number = tile_number;\r\n        this.sheet_position = tile.sheet_position;\r\n        this.type = tile.type;\r\n        this.needs_redraw = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    draw(ctx, x = 0, y = 0) {\r\n        let tiles_size = {\r\n            width: this.sprite_class.tiles_width,\r\n            height: this.sprite_class.tiles_height\r\n        };\r\n\r\n        ctx.drawImage(\r\n            this.sprite_class.image,\r\n            this.sheet_position.x,\r\n            this.sheet_position.y,\r\n            tiles_size.width,\r\n            tiles_size.height,\r\n            x,\r\n            y,\r\n            tiles_size.width,\r\n            tiles_size.height\r\n        );\r\n\r\n        this.trigger('drawn');\r\n\r\n        return this;\r\n    }\r\n\r\n    clear(ctx, x, y) {\r\n        let tiles_size = {\r\n            width: this.sprite_class.tiles_width,\r\n            height: this.sprite_class.tiles_height\r\n        };\r\n\r\n        ctx.clearRect(x, y, tiles_size.width, tiles_size.height);\r\n        return this;\r\n    }\r\n\r\n    isSolid() {\r\n        return this.type === Tile.TYPES.SOLID;\r\n    }\r\n}\r\n\r\nTile.TYPES = {\r\n    SOLID: Symbol()\r\n};\r\n\r\nexport default Tile;"]}