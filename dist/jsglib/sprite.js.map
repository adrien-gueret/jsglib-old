{"version":3,"sources":["../../jsglib/sprite.js"],"names":[],"mappings":"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","file":"sprite.js","sourcesContent":["(function(window) {\r\n    \"use strict\";\r\n\r\n    let JSGlib = window.JSGlib || {};\r\n\r\n\tclass Sprite {\r\n\t\tconstructor() {\r\n\t\t\tthis.image = this.constructor.image;\r\n\t\t}\r\n\t\tgetTilesSize() {\r\n\t\t\treturn this.constructor.getTilesSize();\r\n\t\t}\r\n\t\tstatic getTilesSize() {\r\n\t\t\treturn {\r\n\t\t\t\twidth: this.tiles_width || 0,\r\n\t\t\t\theight: this.tiles_height || 0\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic getTile(tile_number, clone = true) {\r\n\t\t\ttile_number--;\r\n\r\n\t\t\tif (tile_number < 0) {\r\n\t\t\t\treturn new JSGlib.Tile(null);\r\n\t\t\t}\r\n\r\n\t\t\tlet tiles = this.tiles;\r\n\t\t\tlet total_columns = tiles[0].length;\r\n\r\n\t\t\tlet row_index = Math.floor(tile_number / total_columns);\r\n\t\t\tlet column_index = tile_number % total_columns;\r\n\r\n\t\t\tlet tile = tiles[row_index][column_index];\r\n\r\n\t\t\tif ( ! tile) {\r\n\t\t\t\treturn new JSGlib.Tile(null);\r\n\t\t\t}\r\n\r\n\t\t\treturn clone ? tiles[row_index][column_index].clone() : tiles[row_index][column_index];\r\n\t\t}\r\n        static loadImage(url) {\r\n            let promise = (resolve, reject) => {\r\n\t\t\t\tthis.image = new Image();\r\n\r\n\t\t\t\tthis.image.onload = () => {\r\n\t\t\t\t\tresolve(this.image);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.image.onerror = reject;\r\n\t\t\t\tthis.image.src = url;\r\n            };\r\n\r\n            return new Promise(promise);\r\n        }\r\n\t\tstatic makeTiles(tiles_width = 16, tiles_height = 16, tiles_separation = 1) {\r\n\t\t\tif (!this.image) {\r\n\t\t\t\tthrow ReferenceError(this.name + '.makeTiles(): image not found for this class');\r\n\t\t\t}\r\n\r\n\t\t\tthis.tiles = [];\r\n\t\t\tthis.tiles_width = tiles_width;\r\n\t\t\tthis.tiles_height = tiles_height;\r\n\t\t\tthis.tiles_separation = tiles_separation;\r\n\r\n\t\t\tlet image_width = this.image.naturalWidth;\r\n\t\t\tlet image_height = this.image.naturalHeight;\r\n\r\n\t\t\tfor (let j = 0; j < image_height; j += tiles_height) {\r\n\t\t\t\tlet x = j / tiles_height;\r\n\t\t\t\tthis.tiles[x] = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < image_width; i += tiles_width) {\r\n\t\t\t\t\tthis.tiles[x][i / tiles_width] = new JSGlib.Tile(\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\ti + tiles_separation * (i / tiles_width),\r\n\t\t\t\t\t\tj + tiles_separation * (j / tiles_height)\r\n\t\t\t\t\t);\r\n\t\t\t\t\timage_width -= tiles_separation;\r\n\t\t\t\t}\r\n\t\t\t\timage_width = this.image.naturalWidth;\r\n\t\t\t\timage_height -= tiles_separation;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tstatic defineTilesAnimations(...animations) {\r\n\t\t\tfor (let animation of animations) {\r\n\t\t\t\tanimation.tiles.forEach((tile_number, index) => {\r\n\t\t\t\t\tlet current_animated_tile = this.getTile(tile_number, false);\r\n\t\t\t\t\tlet next_tile_number = animation.tiles[index + 1] || animation.tiles[0];\r\n\r\n\t\t\t\t\tcurrent_animated_tile.setAnimation(next_tile_number, animation.time);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tstatic defineTilesTypes(...types) {\r\n\t\t\tfor (let type of types) {\r\n\t\t\t\t// TODO\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n    }\r\n\r\n\tSprite.TILES_TYPES = {\r\n\t\tWALL: Symbol()\r\n\t};\r\n\r\n\tJSGlib.Sprite = Sprite;\r\n\r\n    window.JSGlib = JSGlib;\r\n})(window);"]}