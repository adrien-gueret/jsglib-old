{"version":3,"sources":["../../jsglib/element.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAKqB,OAAO;kBAAP,OAAO;;iBAAP,OAAO;kCAAP,OAAO;;+EAAP,OAAO;;;;;;;;;;;qBAAP,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAP,OAAO;;;sBAAP,OAAO","file":"element.js","sourcesContent":["\"use strict\";\r\n\r\nimport Point from \"jsglib/point\";\r\nimport EventsHandler from 'jsglib/events_handler';\r\n\r\nexport default class Element extends EventsHandler {\r\n    constructor(x, y) {\r\n        super();\r\n        this.prev_position = new Point(x, y);\r\n        this.position = new Point(x, y);\r\n        this.layer = null;\r\n        this.sprite_class = null;\r\n        this.current_tile = null;\r\n        this.current_animation = null;\r\n    }\r\n\r\n    setSpriteClass(sprite_class) {\r\n        this.sprite_class = sprite_class;\r\n        this.current_tile = sprite_class.getTile(1);\r\n        return this;\r\n    }\r\n\r\n    setCurrentTileNumber(tile_number) {\r\n        this.current_tile = this.sprite_class.getTile(tile_number);\r\n\r\n        if (this.layer) {\r\n            this.layer.needs_clear = true;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    useAnimation(animation_name, time, loop = true, timer = null) {\r\n        if (this.current_animation) {\r\n            this.current_animation.stop();\r\n        }\r\n\r\n        let animation_class = this.sprite_class.getAnimationClass(animation_name);\r\n\r\n        if (!animation_class) {\r\n            throw new ReferenceError('Element.useAnimation: animation \"' + animation_name + '\" is not defined for sprite \"' + this.sprite_class.name + '\".');\r\n        }\r\n\r\n        this.current_animation = new animation_class(timer);\r\n\r\n        this.setCurrentTileNumber(this.current_animation.getCurrentTileNumber());\r\n\r\n        this.current_animation\r\n            .on('animation_udpate', () => {\r\n                this.setCurrentTileNumber(this.current_animation.getCurrentTileNumber());\r\n            })\r\n            .start(time, loop);\r\n\r\n        return this;\r\n    }\r\n\r\n    draw(ctx) {\r\n        this.current_tile.draw(ctx, this.position.x, this.position.y);\r\n        return this;\r\n    }\r\n}"]}