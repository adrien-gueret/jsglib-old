{"version":3,"sources":["../../jsglib/timer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAIqB,KAAK;YAAL,KAAK;;WAAL,KAAK;;;yBAAL,KAAK;;sEAAL,KAAK;;;;;;;;;;;;eAAL,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAL,KAAK;;;mBAAL,KAAK","file":"timer.js","sourcesContent":["\"use strict\";\r\n\r\nimport EventsHandler from \"jsglib/events_handler\";\r\n\r\nexport default class Timer extends EventsHandler {\r\n\tconstructor(fps = 30) {\r\n\t\tsuper();\r\n\r\n\t\tthis.fps = fps;\r\n\t\tthis.clocks = {};\r\n\r\n\t\tthis.on('step', () => {\r\n\t\t\tthis.checkCounters();\r\n\t\t});\r\n\t}\r\n\tcheckCounters() {\r\n\t\tfor (let generated_event_name in this.clocks) {\r\n\t\t\tlet clock = this.clocks[generated_event_name];\r\n\t\t\tif (++clock.counter >= clock.target) {\r\n\t\t\t\tthis.trigger(generated_event_name);\r\n\t\t\t\tthis.clearTimeout(generated_event_name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\tsetTimeout(callback, time) {\r\n\t\tlet generated_event_name = (Date.now() * Math.random()).toString(16);\r\n\t\tthis.clocks[generated_event_name] = {\r\n\t\t\tcounter: 0,\r\n\t\t\ttarget: (time / 1000) * this.fps\r\n\t\t};\r\n\t\tthis.on(generated_event_name, callback);\r\n\t\treturn generated_event_name;\r\n\t}\r\n\tclearTimeout(generated_event_name) {\r\n\t\tdelete this.clocks[generated_event_name];\r\n\t\treturn this.off(generated_event_name);\r\n\t}\r\n}"]}